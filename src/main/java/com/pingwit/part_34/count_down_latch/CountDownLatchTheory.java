package com.pingwit.part_34.count_down_latch;

public class CountDownLatchTheory {
    public static void main(String[] args) {
        /*
        CountDownLatch в Java является механизмом синхронизации, который позволяет одному или нескольким потокам ждать,
        пока другие потоки завершат выполнение. Он основан на концепции счетчика,
        который уменьшается на единицу каждый раз, когда поток завершает свою работу,
        и потоки могут ждать, пока счетчик не достигнет нуля.

        Основные характеристики и особенности CountDownLatch:

        - Инициализация счетчика: CountDownLatch инициализируется с определенным значением счетчика,
        которое указывает, сколько раз потоки должны вызвать метод countDown(), чтобы освободить блокировку.
        - Методы countDown() и await():
            Метод countDown(): Уменьшает счетчик CountDownLatch на единицу. Когда счетчик достигает нуля, все ожидающие потоки разблокируются.
            Метод await(): Блокирует текущий поток до тех пор, пока счетчик CountDownLatch не достигнет нуля.
        - Одноразовость: После того как счетчик станет равным нулю, дальнейшие вызовы метода countDown() будут игнорироваться.
        CountDownLatch не может быть переиспользован.
         */
    }
}
