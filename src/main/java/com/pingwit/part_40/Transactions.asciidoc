= Транзакции

Транзакция в SQL представляет собой логическую единицу работы с базой данных,
которая состоит из одного или нескольких SQL операторов.

Основная идея транзакции состоит в том,
чтобы гарантировать, что операции с базой данных будут либо выполнены полностью, либо не выполнены совсем,
чтобы поддерживать целостность (согласованность) данных.


=== ACID - свойства транзакции:
* Атомарность (Atomicity): Транзакция считается атомарной, если все ее операции выполняются как единое целое: либо все,
либо ни одна из них. Если одна операция в транзакции не может быть выполнена, все операции в транзакции отменяются (откат).

* Согласованность (Consistency): Транзакция должна привести базу данных из одного согласованного
состояния в другое согласованное состояние. Транзакция не может нарушить целостность базы данных.

* Изолированность (Isolation): Изменения, внесенные в базу данных транзакцией, должны быть невидимы
для других транзакций до фиксации изменений. Изоляция предотвращает возникновение аномалий параллельного выполнения.

* Долговечность (Durability): После того, как транзакция завершена (зафиксирована),
ее результаты должны быть сохранены даже в случае сбоя базы данных или системы.

=== Команды транзакций:
* BEGIN (или START TRANSACTION): Начинает новую транзакцию.
* COMMIT: Фиксирует изменения, внесенные в рамках транзакции, и завершает ее успешно.
* ROLLBACK: Откатывает изменения, внесенные в рамках транзакции, и отменяет ее выполнение.
* SAVEPOINT: Создает точку сохранения в рамках текущей транзакции, которую можно использовать для частичного отката изменений.

=== Уровни изоляции транзакций:
* READ COMMITTED (Чтение зафиксированных данных):
Это уровень изоляции по умолчанию в PostgreSQL.
В рамках этого уровня транзакция видит только данные, которые были зафиксированы на момент ее начала.
Она не видит изменения, сделанные другими транзакциями, которые еще не были зафиксированы.
Этот уровень изоляции обеспечивает хороший баланс между консистентностью данных и производительностью.

* READ UNCOMMITTED (Чтение незафиксированных данных):
В рамках этого уровня транзакция может видеть незафиксированные изменения, сделанные другими транзакциями.
Этот уровень изоляции может привести к чтению "грязных" данных и несогласованным результатам,
поэтому его использование не рекомендуется в большинстве случаев.

* REPEATABLE READ (Повторяемое чтение):
В рамках этого уровня транзакция видит снимок данных на момент ее начала и гарантирует, что данные,
прочитанные во время транзакции, останутся неизменными до ее завершения.
Этот уровень изоляции может приводить к блокировкам в случае большого количества записей, изменяемых другими транзакциями.

* SERIALIZABLE (Сериализуемое выполнение):
Этот уровень изоляции предоставляет наивысший уровень изоляции, гарантируя, что транзакции выполняются так,
будто они выполняются последовательно одна за другой.
Этот уровень изоляции обеспечивает самый высокий уровень консистентности данных,
но может приводить к серьезному увеличению времени выполнения транзакций из-за блокировок.

=== Текущий уровень изоляции транзакций
SELECT current_setting('transaction_isolation') AS isolation_level;

=== Как поменять уровень изоляции для одной транзакции:
* * SET GLOBAL TRANSACTION ISOLATION LEVEL REPEATABLE READ;